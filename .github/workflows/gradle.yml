# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Build
    - name: Build with Gradle
      run: ./gradlew build -Dspring.profiles.active=prod -x test
      env:
          AWS_DB_ID: ${{ secrets.AWS_DB_ID }}
          AWS_DB_PW: ${{ secrets.AWS_DB_PW }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXP_LEN: ${{ secrets.JWT_EXP_LEN }}
    
    # create directory for deliver
    - name: Make Directory for deliver
      run: mkdir deploy
      
    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
    # deliver in zip file format
    - name: Make zip file
      run: zip -r -qq -j ./comeet-back-deploy.zip ./deploy
    
    # Copy to S3 Bucket
    - name: Deliver to AWS S3
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./comeet-back-deploy.zip s3://comeet-back-deploy/
  

    # Deploy
    - name: Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name comeet-back \
        --deployment-group-name commet-back-deploy \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=comeet-back-deploy,bundleType=zip,key=comeet-back-deploy.zip \
        --region ap-northeast-2
