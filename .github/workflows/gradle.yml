# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # Set environment variables
    - name: set env var
      env:
          AWS_DB_ID: ${{ secrets.AWS_DB_ID }}
          AWS_DB_PW: ${{ secrets.AWS_DB_PW }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXP_LEN: ${{ secrets.JWT_EXP_LEN }}

    # Build
    - name: Build with Gradle
      run: ./gradlew build -Dspring.profiles.active=prod -x test
    
    # create directory for deliver
    - name: Make Directory for deliver
      run: mkdir deploy
      
    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
    # deliver in zip file format
    - name: Make zip file
      run: zip -r -qq -j ./comeet-back-deploy.zip ./deploy
    
    # Copy to S3 Bucket
    - name: Deliver to AWS S3
        
      run: |
        aws s3 sync ./deploy s3://comeet-back-deploy/
        #aws s3 cp \
        #--region ap-northeast-2 \
        #-- acl private \
        #./deploy s3://comeet-back-deploy/
    
